---

# debug
- name: "setup: Debug"
  when: cl_debug|bool
  vars:
    msg: |
      cl_dird [{{ cl_dird }}]
      cl_dird_owner [{{ cl_dira_owner|default('UNDEFINED') }}]
      cl_dird_group [{{ cl_dira_group|default('UNDEFINED') }}]
      cl_dird_dmode [{{ cl_dira_dmode }}]
      cl_handlersd_dir [{{ cl_handlersd_dir }}]
      cl_packagesd_dir [{{ cl_packagesd_dir }}]
      cl_servicesd_dir [{{ cl_servicesd_dir }}]
      cl_filesd_dir [{{ cl_filesd_dir }}]
      cl_statesd_dir [{{ cl_statesd_dir }}]
      cl_dira [{{ cl_dira }}]
      cl_dira_owner [{{ cl_dira_owner|default('UNDEFINED') }}]
      cl_dira_group [{{ cl_dira_group|default('UNDEFINED') }}]
      cl_dira_dmode [{{ cl_dira_dmode }}]
      cl_dira_fmode [{{ cl_dira_fmode }}]
      cl_assemble_regexp [{{ cl_assemble_regexp }}]
      cl_handlersd [{{ cl_handlersd }}]
      cl_packagesd [{{ cl_packagesd }}]
      cl_servicesd [{{ cl_servicesd }}]
      cl_filesd [{{ cl_filesd }}]
      cl_statesd [{{ cl_statesd }}]
      cl_handlers_dir_become [{{ cl_handlers_dir_become }}]
      cl_handlers_dir_owner [{{ cl_handlers_dir_owner|default('UNDEFINED') }}]
      cl_handlers_dir_group [{{ cl_handlers_dir_group|default('UNDEFINED') }}]
      cl_handlers_dir_dmode [{{ cl_handlers_dir_dmode|default('UNDEFINED') }}]
  debug:
    msg: "{{ msg.split('\n')[:-1] }}"

# directories
- name: "setup: Create directories in {{ cl_dird }}"
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ cl_dird_owner|default(omit) }}"
    group: "{{ cl_dird_group|default(omit) }}"
    mode: "{{ cl_dird_dmode }}"
  loop:
    - "{{ cl_dird }}"
    - "{{ cl_handlersd_dir }}"
    - "{{ cl_packagesd_dir }}"
    - "{{ cl_servicesd_dir }}"
    - "{{ cl_filesd_dir }}"
    - "{{ cl_statesd_dir }}"

- name: "setup: Create directory {{ cl_dira }}"
  file:
    state: directory
    path: "{{ cl_dira }}"
    owner: "{{ cl_dira_owner|default(omit) }}"
    group: "{{ cl_dira_group|default(omit) }}"
    mode: "{{ cl_dira_dmode }}"

# handlers
- name: "setup: Create dir {{ role_path }}/handlers"
  become: "{{ cl_handlers_dir_become }}"
  file:
    state: directory
    path: "{{ role_path }}/handlers"
    owner: "{{ cl_handlers_dir_owner|default(omit) }}"
    group: "{{ cl_handlers_dir_group|default(omit) }}"
    mode: "{{ cl_handlers_dir_dmode|default(omit) }}"

- name: "setup: Assemble handlers"
  import_tasks: vars-handlers.yml

- name: "setup: Create handlers"
  template:
    dest: "{{ role_path }}/handlers/handlers-auto-{{ item.key }}.yml"
    src: "{{ item.value.template }}"
    validate: "{{ cl_handlers_validate|default(omit) }}"
    backup: "{{ cl_backup }}"
  loop: "{{ cl_handlers|dict2items }}"
  loop_control:
    label: "{{ role_path }}/handlers/handlers-auto-{{ item.key }}.yml"

- name: "setup: Include handlers"
  lineinfile:
    path: "{{ role_path }}/handlers/main.yml"
    line: "- import_tasks: handlers-auto-{{ item.key }}.yml"
    validate: "{{ cl_handlers_validate|default(omit) }}"
    backup: "{{ cl_backup }}"
    create: true
  loop: "{{ cl_handlers|dict2items }}"
  loop_control:
    label: "{{ role_path }}/handlers/handlers-auto-{{ item.key }}.yml"

# EOF
...
