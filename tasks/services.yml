---
- name: "Services: Debug cl_debug={{ cl_debug }}"
  when: cl_debug | bool
  vars:
    msg: |-
      cl_services_freebsd_rcconf_auto: {{ cl_services_freebsd_rcconf_auto }}
      cl_services:
        {{ cl_services | to_nice_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: FreeBSD services auto.
  when:
    - ansible_os_family == 'FreeBSD'
    - cl_services_freebsd_rcconf_auto | bool
  block:

    - name: "Services: Enable service in rc.conf FreeBSD."
      when: item.value.enabled | d(true) | bool
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.value.name }}_enable\s*=(.*)$
        line: '{{ item.value.name }}_enable="YES"'
        backup: "{{ cl_backup }}"
      loop: "{{ cl_services | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: "Services: Disable service in rc.conf FreeBSD."
      when: not item.value.enabled | d(true) | bool
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.value.name }}_enable\s*=(.*)$
        line: '{{ item.value.name }}_enable="NO"'
        backup: "{{ cl_backup }}"
      loop: "{{ cl_services | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

- name: All services.
  when: ansible_os_family in ['RedHat', 'Debian', 'FreeBSD']
  block:

    - name: "Services: Manage services."
      ansible.builtin.service:
        name: "{{ item.value.name }}"
        state: "{{ item.value.state | d('started') }}"
        enabled: "{{ item.value.enabled | d(true) }}"
      loop: "{{ cl_services | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

# EOF
