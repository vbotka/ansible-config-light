---

- name: "services: Debug"
  vars:
    msg: |-
      cl_services_freebsd_rcconf_auto [{{ cl_services_freebsd_rcconf_auto }}]
      cl_services
      {{ cl_services|to_nice_yaml }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: cl_debug|bool

# FreeBSD auto ------------------------------------------------------------
- block:

    - name: "services: Enable service in rc.conf FreeBSD"
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: '^\s*{{ item.value.name }}_enable\s*=(.*)$'
        line: '{{ item.value.name }}_enable="YES"'
        backup: "{{ cl_backup }}"
      loop: "{{ cl_services|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      when: item.value.enabled|default(true)|bool

    - name: "services: Disable service in rc.conf FreeBSD"
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: '^\s*{{ item.value.name }}_enable\s*=(.*)$'
        line: '{{ item.value.name }}_enable="NO"'
        backup: "{{ cl_backup }}"
      loop: "{{ cl_services|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      when: not item.value.enabled|default(true)|bool

  when:
    - ansible_os_family == 'FreeBSD'
    - cl_services_freebsd_rcconf_auto|bool

# All ---------------------------------------------------------------------
- block:

    - name: "services: Manage services"
      ansible.builtin.service:
        name: "{{ item.value.name }}"
        state: "{{ item.value.state|default('started') }}"
        enabled: "{{ item.value.enabled|default(true) }}"
      loop: "{{ cl_services|dict2items }}"
      loop_control:
        label: "{{ item.key }}"

  when: ansible_os_family == 'RedHat' or
        ansible_os_family == 'Debian' or
        ansible_os_family == 'FreeBSD'

# EOF
...
