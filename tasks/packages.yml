---

- name: "packages: Debug"
  debug:
    msg: "{{ cl_packages.values()|list }}"
  when: cl_debug|bool

# FreeBSD -----------------------------------------------------------------
- name: "packages: Install packages FreeBSD"
  block:
    - name: "packages: Install packages FreeBSD"
      pkgng:
        name: "{{ item.name }}"  # list / elements=string / required
        state: "{{ item.state|default(omit) }}"
        annotation: "{{ item.annotation|default(omit) }}"
        autoremove: "{{ freebsd_pkgng_autoremove|default(omit) }}"
        cached: "{{ freebsd_pkgng_cached|default(omit) }}"
        chroot: "{{ freebsd_pkgng_chroot|default(omit) }}"
        jail: "{{ freebsd_pkgng_jail|default(omit) }}"
        pkgsite: "{{ freebsd_pkgng_pkgsite|default(omit) }}"
        rootdir: "{{ freebsd_pkgng_rootdir|default(omit) }}"
      loop: "{{ cl_packages.values()|list }}"
      loop_control:
        label: "{{ item.name }}"
      register: result
      until: result is succeeded
      retries: "{{ install_retries }}"
      delay: "{{ install_delay }}"
    - name: "packages: Debug FreeBSD packages"
      debug:
        var: result
      when: cl_debug|bool
  when:
    - ansible_os_family == "FreeBSD"
    - freebsd_install_method|lower == "packages"

- name: "packages: Install ports FreeBSD"
  block:
    - name: "packages: Install ports FreeBSD"
      portinstall:
        name: "{{ item.1 }}"  # string / required
        state: "{{ item.0.state|default(omit) }}"
        use_packages: "{{ item.0.use_packages|default(freebsd_use_packages) }}"
      with_subelements:
        - "{{ cl_packages.values()|list }}"
        - name
      loop_control:
        label: "{{ item.1 }}"
      register: result
      until: result is succeeded
      retries: "{{ install_retries }}"
      delay: "{{ install_delay }}"
    - name: "packages: Debug FreeBSD ports"
      debug:
        var: result
      when: cl_debug|bool
  when:
    - ansible_os_family == "FreeBSD"
    - freebsd_install_method|lower == "ports"

# Linux -------------------------------------------------------------------
- name: "packages: Install packages Linux"
  block:
    - name: "packages: Install packages Linux"
      package:
        name: "{{ item.1 }}"  # string / required
        state: "{{ item.0.state|default('present') }}"
        use: "{{ item.0.use|default('auto') }}"
      with_subelements:
        - "{{ cl_packages.values()|list }}"
        - name
      loop_control:
        label: "{{ item.1 }}"
      register: result
      until: result is succeeded
      retries: "{{ install_retries }}"
      delay: "{{ install_delay }}"
    - name: "packages: Debug Linux"
      debug:
        var: result
      when: cl_debug|bool
  when: ansible_os_family == "RedHat" or
        ansible_os_family == "Debian"

# EOF
...
