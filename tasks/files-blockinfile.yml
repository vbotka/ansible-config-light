---

- name: "files-blockinfile: Debug blocks in cl_files.values()"
  ansible.builtin.debug:
    msg: "{{ cl_files.values()|selectattr('blocks', 'defined')|list }}"
  when: cl_debug|bool

- name: "files-blockinfile: Blockinfile"
  blockinfile:
    path: "{{ item.0.path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.1.marker }}"
    block: "{{ item.1.block }}"
    state: "{{ item.1.state|default(omit) }}"
    insertafter: "{{ item.1.insertafter|default(omit) }}"
    insertbefore: "{{ item.1.insertbefore|default(omit) }}"
    marker_begin: "{{ item.1.marker_begin|default(omit) }}"
    marker_end: "{{ item.1.marker_end|default(omit) }}"
    owner: "{{ item.0.owner|default(omit) }}"
    group: "{{ item.0.group|default(omit) }}"
    mode: "{{ item.0.mode|default(omit) }}"
    attributes: "{{ item.0.attributes|default(omit) }}"
    create: "{{ item.0.create|default(omit) }}"
    validate: "{{ item.0.validate|default(omit) }}"
    # backup: "{{ cl_backup }}"
  loop: "{{ cl_files.values()|list|subelements('blocks', skip_missing=true) }}"
  loop_control:
    label: "{{ item.0.path }} {{ item.1.marker }}"
  notify: "{{ item.0.handlers|default(omit) }}"
  register: cl_results_blocks

- block:
    - name: "files-blockinfile: Debug cl_results_blocks"
      ansible.builtin.debug:
        var: cl_results_blocks
    - name: "files-blockinfile: Debug changed blocks paths"
      ansible.builtin.debug:
        msg: "{{ cl_results_blocks.results|default([])|
                 json_query('[?changed].invocation.module_args.path')
                 }}"
  when: cl_debug|bool

# EOF
...
